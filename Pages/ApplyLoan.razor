@page "/Applyloan"
@page "/Applyloan/{LoadID:decimal}"

<div class="container my-4 ">
    <!-- mobile hidden <ยังไม่ได้ทำ> -->

    <div class="card  px-2 mt-5 pb-5" style="border-radius:8px">
        <div class="row justify-content-md-center pt-5">
            <div class="col text-end mx-2">
                <button type="button" class="btn primary-bg">1</button>
            </div>
            <div class="col mx-2">
                <button type="button" class="btn bg-light">2</button>
            </div>
        </div>
        <div class="row my-3 mx-2 pt-4">
            <div class="col-12 col-md-6">
                <EditForm Model="ModelApplyLoan" OnValidSubmit="@Submit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label class="form-label font-weight-bold">ประเภทการกู้</label>
                        <InputSelect @bind-Value="ModelApplyLoan.LoanTypeID" class="form-select form-select-sm">
                            @for (var i = 0; i < LoanTypeList.Count; i++)
                            {
                                var item = LoanTypeList[i];

                                if (@item.LoanTypeId != 0)
                                {
                                    <option value="@item.LoanTypeId">@i.  @item.LoanTypeName (@item.LoanParentId)</option>
                                }
                                else
                                {
                                    <option value="@item.LoanTypeId">@item.LoanTypeName</option>
                                }
                            }
                        </InputSelect>
                    </div>
                    <div class="mb-3">
                        <label class="form-label font-weight-bold">จำนวนเงินที่ต้องการกู้</label>
                        <InputNumber @bind-Value="ModelApplyLoan.LoanMaxAmount" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label font-weight-bold">จำนวนงวด</label>
                        <InputNumber @bind-Value="ModelApplyLoan.Period" class="form-control" aria-describedby="periodHelp" />
                        <div id="periodHelp" class="form-text">
                            สามารถแก้ไขได้ แต่ต้องไม่เกิดกำหนดระยะเวลา ของงวดที่กำหนดไว้
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="guarantor" class="form-label font-weight-bold">ชื่อผู้ค้ำ</label>
                        <div class="input-group">
                            <InputText @bind-Value="ModelApplyLoan.Guarantor" class="form-control" />
                            <button type="button"
                                    class="btn btn-outline-secondary"
                                    @onclick="findGuarantor">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <ValidationMessage For="()=>ModelApplyLoan.Guarantor" />
                        @if (guarantorList.Count != 0)
                        {
                            <div class="overflow-auto my-2" style="height:200px;">
                                <ul>
                                    @for (var i = 0; i < guarantorList.Count; i++)
                                    {
                                        var people = guarantorList[i];
                                        var fullName = people.TitleNameThai + people.StaffNameThai + " " + people.StaffSnameThai;

                                        <li @onclick="()=>changeValGuarantor(people)"><a class="dropdown-item">@fullName</a></li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                    <div class="d-grid gap-2">
                        <button class="btn button-color shadow rounded" style="color:white;border-radius:10px" type="submit">ดำเนินการต่อ</button>
                    </div>
                </EditForm>

            </div>
            <div class="col secondary-bg mx-2" style="border-radius:10px">
                @if (ModelApplyLoan.LoanTypeID != 0)
                {
                    var loan = LoanTypeList.FirstOrDefault(x => x.LoanTypeId == ModelApplyLoan.LoanTypeID);

                    <div class=" card bg-light font-color  text-h2 font-weight-bolder my-4 py-2 px-2 text-center"
                         style="border-radius: 10px">
                        @loan.LoanParentId @loan.LoanParentName
                    </div>

                    <div class="mt-4 px-4">
                        <div class="row py-1">
                            <div class="col">วงเงินสูงสุด</div>
                            @if (loan.LoanMaxAmount != 0)
                            {
                                <div class="col text-end">@loan.LoanMaxAmount บาท</div>
                            }
                            else
                            {
                                <div class="col text-end">กู้ได้ตามจริง</div>
                            }
                        </div>
                        <div class="row py-1">
                            <div class="col">อัตราดอกเบี้ย</div>
                            @if (loan.LoanInterate != 0)
                            {
                                <div class="col text-end">@loan.LoanInterate %</div>
                            }
                            else
                            {
                                <div class="col text-end">-</div>
                            }
                        </div>
                        <div class="row py-1">
                            <div class="col">ผ่อนชำระสูงสุด</div>
                            <div class="col text-end">@loan.LoanPeriod เดือน</div>
                        </div>
                        <div class="row py-1">
                            <div class="col">ผ่อนชำระเดือนละ</div>
                            <div class="col text-end">1000 บาท</div>
                        </div>
                    </div>
                    <div class="text-center mt-4 py-1">
                        <button type="button" class="btn button-color shadow rounded px-5 text-light" style="border-radius:10px" @onclick="() => OpenPDF(loan)">รายละเอียด</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    public string staffId { get; set; } = "0";

    async Task Submit()
    {
        var LoanType = LoanTypeList.FirstOrDefault(x => x.LoanTypeId == ModelApplyLoan.LoanTypeID);

        @*เช็คเงินที่ขอ*@
        if (LoanType.LoanMaxAmount != 0)
        {
            if (ModelApplyLoan.LoanMaxAmount > LoanType.LoanMaxAmount)
            {
                string alert = "จำนวนเงินที่คุณขอยื่นกู้มากกว่าวงเงินสูงสุดของประเภท " + LoanType.LoanParentName;
                await JS.InvokeVoidAsync("displayTickerAlert", alert);
                return;
            }
        }


        @*เช็คจำนวนงวด*@
        if (ModelApplyLoan.Period > LoanType.LoanPeriod)
        {
            string alert = "ระบุจำนวนงวดไม่ถูกต้อง จำนวนงวดต้องไม่เกิน " + LoanType.LoanPeriod + "งวด!";
            await JS.InvokeVoidAsync("displayTickerAlert", alert);
            return;
        }


        @*เช็คผู้ค้ำ*@
        if (staffId == "0")
        {
            string alert = "กรุณาตรวจสอบข้อมูลผู้ค้ำให้ถูกต้อง โดยการค้นหาชื่อที่เครื่องหมายค้นหา";
            await JS.InvokeVoidAsync("displayTickerAlert", alert);
            return;
        }
        else
        {
            var guarantorData = _context.VLoanStaffDetails.Where(c => c.StaffId == staffId).FirstOrDefault();
            @* เช็คว่าคนที่ค้ำยังทำงานอยู่ไหม => StaffDepart *@
            if (guarantorData.StaffDepart == "e")
            {
                string alert = "ไม่สามารถค้ำได้";
                await JS.InvokeVoidAsync("displayTickerAlert", alert);
                return;
            }
            @* รอถามเรื่องใช่ตัวไหนในการคำนวนวันหมดอายุงาน แต่ไม่ได้เช็เรื่องที่ต่าทำงานมาเกิน 2 ปีไหม *@

        }

        await sessionStorage.SetItemAsync("FromLoan_1", ModelApplyLoan);
        NavigationManager.NavigateTo("/uploaddoc");
    }

    private void findGuarantor()
    {
        guarantorList = _context.VLoanStaffDetails.Where(c =>
        c.StaffNameThai.Contains(ModelApplyLoan.Guarantor) ||
        c.StaffSnameThai.Contains(ModelApplyLoan.Guarantor)
    ).ToList<VLoanStaffDetail>();

        @*     STAFF_ID
            TITLE_NAME_THAI
            STAFF_NAME_THAI
            STAFF_SNAME_THAI
            STAFF_EMAIL
            FAC_NAME_THAI
            DEPT_NAME_THAI
            POS_NAME_THAI
            STAFF_TYPE_NAME
            STAFF_TYPE
            CAMP_NAME_THAI
            CAMP_ID*@



        @*ModelApplyLoan.Guarantor*@
    }

    private void OpenPDF(LoanType data)
    {
        Console.WriteLine(data);
    }

    private void changeValGuarantor(VLoanStaffDetail people)
    {
        var fullName = people.TitleNameThai + people.StaffNameThai + " " + people.StaffSnameThai;
        ModelApplyLoan.Guarantor = fullName;
        staffId = people.StaffId;
        ModelApplyLoan.GuarantorId = staffId;
    }

}